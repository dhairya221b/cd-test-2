apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: poly-rel
  namespace: helm1
spec:
  interval: 5m
  chart:
    spec:
      chart: polymorphic-app
      sourceRef:
        kind: HelmRepository
        name: helm-repo
        namespace: helm1
      # valuesFiles:
         
  values:
              # Default values for polymorphic-app.
          # This is a YAML-formatted file.
          # Declare variables to be passed into your templates.

          nameOverride: ""
          fullnameOverride: ""
          prefixWithReleaseName:
            enabled: true
          image:
            repository: dhairya442/job-exam-management-system-web
            tag: "latest"
            pullPolicy: IfNotPresent

          imagePullSecrets: []

          volumeMounts: []

          volumes: []

          env: []
          envFrom: []

          # service template
          serviceTemplate:
            name: svc
            image:

            ## initContainers:
            ##   - name: something
            ##     image: alpine
            ##     command: ['command', 'here']

            initContainers: []

            lifecycleHooks: {}

            healthcheck:
              enabled: false
              type: httpGet
              # path: /healthz
              # port: http
              # initialDelaySeconds: 30
              # periodSeconds: 30

            autoscaling: false
            minReplicaCount: 1
            maxReplicaCount: 1
            env: []
            envFrom: []
            ports:
            - name: http
              containerPort: 80
              protocol: TCP
            resources: {}
              # We usually recommend not to specify default resources and to leave this as a conscious
              # choice for the user. This also increases chances charts run on environments with little
              # resources, such as Minikube. If you do want to specify resources, uncomment the following
              # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
              # limits:
              #  cpu: 100m
              #  memory: 128Mi
              # requests:
              #  cpu: 100m
              #  memory: 128Mi
            securityContext: {}
              # fsGroup: 1001
              # runAsGroup: 1001
              # runAsUser: 1001
            dnsConfig: {}
              # nameservers:
              #   - 192.0.2.1 # this is an example
              # searches:
              #   - ns1.svc.cluster-domain.example
              #   - my.dns.search.suffix
              # options:
              #   - name: ndots
              #     value: "2"
              #   - name: edns0
            annotations: {}
            nodeSelector: {}
            tolerations: []
            affinity: {}
            volumeMounts: []
            volumes: []

            service:
              enabled: true
              # className: nginx
              type: ClusterIP
              ports:
              - name: http
                port: 80
                targetPort: http
                protocol: TCP
              annotations: {}

            ingress:
              enabled: false
              # className: nginx
              annotations: {}
              hosts:
                - host: app.example.com
                  paths: []

              tls: []
              #  - secretName: chart-example-tls
              #    hosts:
              #      - chart-example.local

          services:
              - serviceTemplate:
                name: deployment-app
                type: Deployment
                image: 
                  repository: dhairya442/job-exam-management-system-web 
                  tag: "latest"

                ## initContainers:
                ##   - name: something
                ##     image: alpine
                ##     command: ['command', 'here']

                initContainers: []

                lifecycleHooks: {}

                healthcheck:
                  enabled: false
                  type: httpGet
                  # path: /healthz
                  # port: http
                  # initialDelaySeconds: 30
                  # periodSeconds: 30

                autoscaling: false
                minReplicaCount: 1
                maxReplicaCount: 1
                env: 
                  - name: DB_CONNECTION
                    value: "mysql"
                  - name: DB_DATABASE
                    value: "apply"
                  - name: DB_HOST
                    value: "poly-rel-svc-svc"
                  - name: DB_PORT
                    value: "3306"
                  - name: DB_USERNAME
                    value: "forge"

                envFrom: []
                ports:
                - name: http
                  containerPort: 80
                  protocol: TCP
                resources: {}
                  # We usually recommend not to specify default resources and to leave this as a conscious
                  # choice for the user. This also increases chances charts run on environments with little
                  # resources, such as Minikube. If you do want to specify resources, uncomment the following
                  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
                  # limits:
                  #  cpu: 100m
                  #  memory: 128Mi
                  # requests:
                  #  cpu: 100m
                  #  memory: 128Mi
                securityContext: {}
                  # fsGroup: 1001
                  # runAsGroup: 1001
                  # runAsUser: 1001
                dnsConfig: {}
                  # nameservers:
                  #   - 192.0.2.1 # this is an example
                  # searches:
                  #   - ns1.svc.cluster-domain.example
                  #   - my.dns.search.suffix
                  # options:
                  #   - name: ndots
                  #     value: "2"
                  #   - name: edns0
                annotations: {}
                nodeSelector: {}
                tolerations: []
                affinity: {}
                volumeMounts: []
                volumes: []

                service:
                  enabled: true
                  # className: nginx
                  type: ClusterIP
                  ports:
                  - name: http
                    port: 8000
                    targetPort: 8000
                    protocol: TCP
                  annotations: {}

                ingress:
                  enabled: true
                  # className: nginx
                  annotations: {}
                  hosts:
                  - host: job-exam-poly.com
                    paths:
                      - path: /
                        pathType: Prefix

                        serviceName: 
                        servicePort: 8000 # Specify the service port for this path

                  tls: []
                  #  - secretName: chart-example-tls
                  #    hosts:
                  #      - chart-example.local

              - serviceTemplate:
                name: svc
                type: StatefulSet
                image: 
                  repository: mysql
                  tag: "8.0"

                ## initContainers:
                ##   - name: something
                ##     image: alpine
                ##     command: ['command', 'here']

                initContainers: []

                lifecycleHooks: {}

                healthcheck:
                  enabled: false
                  type: httpGet
                  # path: /healthz
                  # port: http
                  # initialDelaySeconds: 30
                  # periodSeconds: 30

                autoscaling: false
                minReplicaCount: 1
                maxReplicaCount: 1
                env: 
                  - name: MYSQL_DATABASE 
                    value: "apply"
                  - name: MYSQL_USER 
                    value: "forge"
                  - name: MYSQL_PASSWORD
                    value: "123456"
                  - name: MYSQL_ROOT_PASSWORD 
                    value: "123456789"

                envFrom: []
                ports:
                - name: http
                  containerPort: 80
                  protocol: TCP
                resources: {}
                  # We usually recommend not to specify default resources and to leave this as a conscious
                  # choice for the user. This also increases chances charts run on environments with little
                  # resources, such as Minikube. If you do want to specify resources, uncomment the following
                  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
                  # limits:
                  #  cpu: 100m
                  #  memory: 128Mi
                  # requests:
                  #  cpu: 100m
                  #  memory: 128Mi
                securityContext: {}
                  # fsGroup: 1001
                  # runAsGroup: 1001
                  # runAsUser: 1001
                dnsConfig: {}
                  # nameservers:
                  #   - 192.0.2.1 # this is an example
                  # searches:
                  #   - ns1.svc.cluster-domain.example
                  #   - my.dns.search.suffix
                  # options:
                  #   - name: ndots
                  #     value: "2"
                  #   - name: edns0
                annotations: {}
                nodeSelector: {}
                tolerations: []
                affinity: {}
                volumeMounts: []
                volumes: []

                service:
                  enabled: true
                  # className: nginx
                  type: ClusterIP
                  ports:
                  - name: http
                    port: 3306
                    targetPort: 3306
                    protocol: TCP
                  annotations: {}

                ingress:
                  enabled: false
                  # className: nginx
                  annotations: {}
                  hosts:
                    - host: app.example.com
                      paths: []

                  tls: []
                  #  - secretName: chart-example-tls
                  #    hosts:
                  #      - chart-example.local

          # worker template
          workerTemplate:
            name: worker
            image:
            autoscaling: false
            minReplicaCount: 1
            maxReplicaCount: 1
            terminationGracePeriodSeconds: 30
            secret:
              enabled: false
            env: []
            envFrom: []

            volumeMounts: []
            volumes: []

            resources: {}
              # We usually recommend not to specify default resources and to leave this as a conscious
              # choice for the user. This also increases chances charts run on environments with little
              # resources, such as Minikube. If you do want to specify resources, uncomment the following
              # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
              # limits:
              #  cpu: 100m
              #  memory: 128Mi
              # requests:
              #  cpu: 100m
              #  memory: 128Mi
            securityContext: {}
              # fsGroup: 1001
              # runAsGroup: 1001
              # runAsUser: 1001
            dnsConfig: {}
              # nameservers:
              #   - 192.0.2.1 # this is an example
              # searches:
              #   - ns1.svc.cluster-domain.example
              #   - my.dns.search.suffix
              # options:
              #   - name: ndots
              #     value: "2"
              #   - name: edns0
            nodeSelector: {}

            tolerations: []

            affinity: {}

          workers:
          #######################################
          # pulsar-billing-service
          #######################################
            # - name: myapp-deployment
            #   image: 
            #     repository: dhairya442/job-exam-management-system-web
            #     tag: "latest  "
            # # #   args: ["-template", "/var/www/.env.staging:/var/www/.env", "-poll", "php", "artisan", "queue:work"]
            #   # env:
            #   #   DB_CONNECTION: "mysql"
            #   #   DB_DATABASE: "apply"
            #   #   DB_HOST: "job-exam-management-system-mysql.helm.svc.cluster.local"
            #   #   DB_PORT: "3306"
            #   #   DB_USERNAME: "forge"

            #   env: 
            #       - name: DB_CONNECTION 
            #         value: mysql
            #       - name: DB_HOST
            #         value: "job-exam-management-system-mysql.helm.svc.cluster.local"
            #       - name: DB_PORT 
            #         value: "3306"
            #       - name: DB_DATABASE 
            #         value: "apply"
            #       - name: DB_USERNAME
            #         value: "forge"
            #       - name: DB_PASSWORD
            #         value: "123456"
            #   envFrom: []
            #     # - name: zxcv
            #     #   value: uiop
            #   # certificates & keys will be mounted as a volume from secret
            #   autoscaling: false
            #   minReplicaCount: 1
            #   maxReplicaCount: 0
            #   # envSecrets:
            #   #   name: uiop
            #   #   name: zxcv
            #   #   name: hjkl
            #   volumeMounts: []
            #   # - name: vol1
            #   #   mountPath: /etc/vol1
            #   # - name: vol2
            #   #   mountPath: /etc/vol2
            #   # - name: vol3
            #   #   mountPath: /etc/vol3

            #   volumes: []
            #     # - name: vol1
            #     #   secret:
            #     #     secretName: secret1
            #     # - name: vol2
            #     #   secret:
            #     #     secretName: secret2
            #     # - name: vol3
            #     #   secret:
            #     #     secretName: secret3

              # probe: []
                # aliveCommand: ["/app/worker", "alive"]
                # timeoutSeconds: 10

            #   resources:
            # #     # We usually recommend not to specify default resources and to leave this as a conscious
            # #     # choice for the user. This also increases chances charts run on environments with little
            # #     # resources, such as Minikube. If you do want to specify resources, uncomment the following
            # #     # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
            #     limits:
            #       cpu: 100m
            #       memory: 128Mi
            #     requests:
            #       cpu: 100m
            #       memory: 128Mi

            # #   nodeSelector: {}

            # #   tolerations: []

            # #   affinity: {}

          cronJobTemplate:
            name: cronjob
            image:
              tag:
              repository:
            suspend: true
            env: []
            envFrom: []
            volumeMounts: []
            annotations: {}
            volumes: []
            securityContext: {}
              # fsGroup: 1001
              # runAsGroup: 1001
              # runAsUser: 1001
            # successfulJobsHistoryLimit: 1
            # failedJobsHistoryLimit: 1

          cronJobs:
          #   - name: update-status
          #     image:
          #       repository:
          #       tag:
          #     suspend: true
          #     env: []
          #     envFrom: []
          #     annotations: {}
          #     schedule: "0 5 * * *"
          #     # The `template` below places `.env.staging` to `.env`.
          #     args: ["-template", "/var/www/.env.staging:/var/www/.env", "php", "artisan", "listings:update-statuses"]
          #     volumeMounts: []
          #     # - name: vol1
          #     #   mountPath: /etc/vol1
          #     # - name: vol2
          #     #   mountPath: /etc/vol2
          #     # - name: vol3
          #     #   mountPath: /etc/vol3

          #     volumes: []
          #       # - name: vol1
          #       #   secret:
          #       #     secretName: secret1
          #       # - name: vol2
          #       #   secret:
          #       #     secretName: secret2
          #       # - name: vol3
          #       #   secret:
          #       #     secretName: secret3

          jobTemplate:
            name: job
            image:
              repository:
              tag:
            env: []
            envFrom: []
            command:
            annotations: []
            volumeMounts: []
            securityContext: {}
              # fsGroup: 1001
              # runAsGroup: 1001
              # runAsUser: 1001
            volumes: []

          jobs:
            # - name: migrate
            #   env:
            #     - name: TZ
            #       value: Asia/Kolkata
            #   # To keep the container running
            #   command: [ "/bin/sh", "-c", "--" ]
            #   args: [ "while true; do sleep 30; done;" ]
              # command: ["migrate"]
              # args: ["migrate", "-database", "${MIGRATION_URL}", "-path", "/app/db_migrations", "up"]
